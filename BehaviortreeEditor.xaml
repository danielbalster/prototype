<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Prototype"
        xmlns:behavior="clr-namespace:Prototype.Behaviortree"
    
        mc:Ignorable="d">

    <local:NodeTemplateSelector x:Key="nodeTemplateSelector">
    </local:NodeTemplateSelector>

    <Style x:Key="nodeBorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrush}}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="Running">
                <Setter Property="Background" Value="LightBlue"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="Failed">
                <Setter Property="Background" Value="#FFF75E73"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="Success">
                <Setter Property="Background" Value="LightGreen"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="nodeBox" DataType="{x:Type behavior:NodeViewModel}">
        <Border Style="{StaticResource nodeBorderStyle}" Padding="4">
            <StackPanel Orientation="Vertical" Margin="4 0 0 4" HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding Name}"/>
                <ContentControl Content="{Binding}"  />
            </StackPanel>
        </Border>
    </DataTemplate>



    <DataTemplate DataType="{x:Type behavior:DelayViewModel}">
            <StackPanel Orientation="Vertical" >
                <DockPanel MinWidth="100" HorizontalAlignment="Stretch">
                    <TextBlock DockPanel.Dock="Left" Text="Milliseconds:"/>
                    <TextBox Text="{Binding Milliseconds}"/>
                </DockPanel>
            <ContentControl ContentTemplate="{StaticResource nodeBox}" Content="{Binding Children[0]}"  />
        </StackPanel>
    </DataTemplate>

    <DataTemplate  DataType="{x:Type behavior:PrintViewModel}">
        <DockPanel MinWidth="100" HorizontalAlignment="Stretch">
            <TextBlock DockPanel.Dock="Left" Text="Text:"/>
            <TextBox Text="{Binding Text}"/>
        </DockPanel>
    </DataTemplate>


    <DataTemplate  DataType="{x:Type behavior:SelectorViewModel}">
        <ItemsControl ItemsSource="{Binding Children}" ItemTemplate="{StaticResource nodeBox}">
            <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
    </DataTemplate>

    <DataTemplate  DataType="{x:Type behavior:SequenceViewModel}">
        <ItemsControl ItemsSource="{Binding Children}" ItemTemplate="{StaticResource nodeBox}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>


    <DataTemplate DataType="{x:Type behavior:InverterViewModel}">
        <ContentControl ContentTemplate="{StaticResource nodeBox}" Content="{Binding Children[0]}"  />
    </DataTemplate>

    <DataTemplate DataType="{x:Type behavior:DecoratorViewModel}">
        <ContentControl ContentTemplate="{StaticResource nodeBox}" Content="{Binding Children[0]}"  />
    </DataTemplate>

    <DataTemplate  DataType="{x:Type behavior:NodeViewModel}">
    </DataTemplate>
    <DataTemplate  DataType="{x:Type behavior:MoveToViewModel}">
    </DataTemplate>
    <DataTemplate  DataType="{x:Type behavior:HasTargetViewModel}">
    </DataTemplate>
    <DataTemplate  DataType="{x:Type behavior:FindTargetViewModel}">
    </DataTemplate>



    <DataTemplate x:Key="behaviortreeEditor" DataType="{x:Type local:BehaviortreesEditorViewModel}">
        <DockPanel>
            <ToolBar DockPanel.Dock="Top">
                <Button Content="New"/>
                <Button Content="Cut"/>
                <Button Content="Copy"/>
                <Button Content="Paste"/>
                <ToggleButton Content="Play" IsChecked="{Binding Path=DataContext.World.Playing, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType={x:Type TabControl}},Mode=TwoWay}"
                              />

            </ToolBar>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="4"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <GridSplitter Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" ResizeDirection="Columns" Height="auto" HorizontalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <GridSplitter Grid.Row="0" Grid.RowSpan="3" Grid.Column="3" ResizeDirection="Columns" Height="auto" HorizontalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <GridSplitter Grid.Row="1" Grid.Column="0" ResizeDirection="Rows" Width="auto" HorizontalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>

                <!-- list of behaviors -->
                <ListBox Grid.Row="0" Grid.Column="0"
                     ItemsSource="{Binding Behaviortrees}"
                     VirtualizingStackPanel.VirtualizationMode="Recycling"
                     SelectedValue="{Binding Current, Mode=TwoWay}"
                     >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Name}"/>
                                <!--
                        <ComboBox Grid.Column="5" ItemsSource="{Binding Source={StaticResource unitTypesEnum}}"
                            SelectedItem="{Binding Path=Type, Mode=TwoWay}" />
                        -->
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <ListBox Grid.Row="2"  Grid.Column="0"
                     ItemsSource="{Binding DraggableNodes}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border 
                                local:DragDropBehavior.IsDragSource="True"
                                BorderThickness="1" CornerRadius="5" BorderBrush="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" >
                                <StackPanel Orientation="Vertical"  Margin="1">
                                    <TextBlock Text="{Binding Type.Name}" FontWeight="Bold"/>
                                    <TextBlock Text="{Binding Description}"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <DockPanel Grid.Row="0" Grid.RowSpan="3"  Grid.Column="4">
                    <DockPanel DockPanel.Dock="Top">
                        <TextBlock DockPanel.Dock="Left">Unit:</TextBlock>
                        <ComboBox 
                              DisplayMemberPath="Id"
                              SelectedValue="{Binding SelectedUnit, Mode=TwoWay}"
                              ItemsSource="{Binding Path=DataContext.World.Units, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType={x:Type TabControl}}}"
                              />
                    </DockPanel>
                    <ListView 
                        ItemsSource="{Binding SelectedUnit.Blackboard.Entries}"
                             >

                        <ListView.View >
                            <GridView >
                                <GridViewColumn Header="Key" Width="60">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Key}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Node" Width="0">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Id}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Value">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
                <ScrollViewer Grid.Row="0" Grid.RowSpan="3" Grid.Column="2"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Auto"
                                  >
                    <ContentControl
                        Margin="10"
                        ContentTemplate="{StaticResource nodeBox}"
                        Content="{Binding Current.TreeRoot}"  />


                    <!--
ContentTemplate="{StaticResource nodeDataTemplate}"
                    <TreeView 
                        DataContext="{Binding Current}"
                        ItemsSource="{Binding Root}"
                        ContextMenu="{Binding ContextMenu}"
                        local:TreeViewHelper.SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}"
                              >
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="IsExpanded" Value="True" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate  DataType="{x:Type behavior:Delay}" ItemsSource="{Binding}">
                                <Border Margin="3" BorderBrush="Black" BorderThickness="1">
                                    <StackPanel Orientation="Horizontal" Margin="0 0 10 0">
                                        <TextBlock Text="{Binding Name}" />
                                        <TextBox Text="{Binding Milliseconds}" />
                                        <TextBlock Text="{Binding Id}" FontSize="6" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                    </StackPanel>
                                </Border>
                            </HierarchicalDataTemplate>

                            <HierarchicalDataTemplate  DataType="{x:Type behavior:Print}">
                                <Border Margin="3" BorderBrush="Black" BorderThickness="1">
                                    <StackPanel Orientation="Horizontal" Margin="0 0 10 0">
                                        <TextBlock Text="{Binding Name}" />
                                        <TextBlock Text="&quot;"/>
                                        <TextBox Text="{Binding Text}" />
                                        <TextBlock Text="&quot;"/>
                                        <TextBlock Text="{Binding Id}" FontSize="6" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                    </StackPanel>
                                </Border>
                            </HierarchicalDataTemplate>

                            
                    <HierarchicalDataTemplate DataType="{x:Type behavior:Composite}" ItemsSource="{Binding}">
                        <Border Margin="3" BorderBrush="Black" BorderThickness="1">
                            <StackPanel Orientation="Horizontal" Margin="0 0 10 0">
                                <TextBlock Text="{Binding Name}" />
                                <TextBlock Text="{Binding Id}" FontSize="6" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            </StackPanel>
                        </Border>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate  DataType="{x:Type behavior:Node}" >
                        <StackPanel Orientation="Horizontal" Margin="0 0 10 0">
                            <TextBlock Text="{Binding Name}" />
                            <TextBlock Text="{Binding Id}" FontSize="6" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>

                    </TreeView.Resources>
                    </TreeView>
                    <ItemsControl  Visibility="Collapsed"
                  Background="LightGray" 
                  ItemsSource="{Binding Current.Nodes}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Width="100" Height="20" BorderBrush="Black" BorderThickness="1" CornerRadius="5"
                                    >
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF6E8B8B" Offset="0"/>
                                        <GradientStop Color="#FF12A447" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <TextBlock Text="{Binding Name}" TextAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Canvas.Left" Value="{Binding Path=PX}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Path=PY}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
                    -->
                </ScrollViewer>
            </Grid>
        </DockPanel>
    </DataTemplate>

</ResourceDictionary>